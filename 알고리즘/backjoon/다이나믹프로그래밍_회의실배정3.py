'''
회의실 배정 3
 
시간 제한	메모리 제한	
1 초	256 MB	

문제
서준이는 아빠로부터 N개의 회의와 하나의 회의실을 선물로 받았다. 
각 회의는 시작 시간, 끝나는 시간, 회의 인원이 주어지고 
한 회의실에서 동시에 두 개 이상의 회의가 진행될 수 없다. 

단, 회의는 한번 시작되면 중간에 중단될 수 없으며 
한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다. 
회의의 시작 시간은 끝나는 시간보다 항상 작다. 
N개의 회의를 회의실에 효율적으로 배정할 경우 회의를 진행할 수 있는 최대 인원을 구하자.

입력
첫째 줄에 회의의 수 N이 주어진다. 
둘째 줄부터 N + 1 줄까지 공백을 사이에 두고 
    회의의 시작시간, 끝나는 시간, 회의 인원이 주어진다.

출력
첫째 줄에 회의실에서 회의를 진행할 수 있는 최대 인원을 출력한다.

제한
1 ≤ N ≤ 100,000
임의의 회의 K(1≤ K ≤ N)는 회의 K-1과 회의 K+1과는 회의 시간이 겹치고 다른 회의들과는 회의 시간이 겹치지 않는다.
모든 회의의 시작 시간과 끝나는 시간은 (2^31)-1보다 작거나 같은 자연수 또는 0이다.
모든 회의의 시작 시간과 끝나는 시간은 서로 다르다.
회의 인원은 1,000보다 작거나 같은 자연수 이다.

예제 입력 1 
6
10 40 80
30 60 60
50 80 70
70 100 100
90 120 40
110 140 50

예제 출력 1 
230
1번, 4번, 6번 회의를 진행하는 게 최적이다.

'''


import sys, math

n  = int(sys.stdin.readline().strip())
# 시작, 끝, 인원
ls = [list(map(int, sys.stdin.readline().strip().split())) for _ in range(n)]

dp = [0 for _ in range(n)]

for i in range(n):
    if i==0:
        dp[i] = ls[i][2]
    elif i==1:
        dp[i] = max(ls[i][2], dp[i-1])
    else:
        dp[i] = max(dp[i-2]+ls[i][2], dp[i-1])
        
print(dp[n-1])